services:
  vpn-server:
    container_name: vpn-server
    hostname: secretbay.me
    build: .
    ports:
      - "9999:9999"
    volumes:
      - ./certbot/conf/live/${DOMAIN}/fullchain.pem:/certs/fullchain.pem
      - ./certbot/conf/live/${DOMAIN}/privkey.pem:/certs/privkey.pem
      - ./static:/app/static
      - ./.env:/app/.env:ro
      - ./logs:/app/logs:rw
      - ./metrics:/app/metrics:rw
      - ./backups:/var/backups/vpn-server:rw
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - ENV=production
      - DOCKER_CONTAINER=true
      - SERVER_PORT=9999
      - JWT_SECRET=${JWT_SECRET:-YourSuperSecretKey-ThisIsAVeryLongSecretKeyForDevelopment-2024123123213}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-changeme}
      - ALLOWED_ORIGINS=https://secretbay.me
      - TLS_MIN_VERSION=1.3
      - MAX_REQUEST_SIZE=1048576
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_DURATION=60
      - MAX_CONN_AGE=3600
      - READ_TIMEOUT=30
      - WRITE_TIMEOUT=30
      - HTTP2_ENABLED=true
      - HTTP2_MAX_CONCURRENT_STREAMS=250
      - HTTP2_MAX_FRAME_SIZE=16384
      - HTTP2_BUFFER_SIZE=65536
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=secretbay
      - DB_USER=secretbay
      - DB_PASSWORD=${DB_PASSWORD:-changeme}
      - TZ=UTC
      - AUTH_ENABLED=${AUTH_ENABLED:-true}
      - SSH_DISABLE_STRICT_HOST_KEY_CHECKING=true
    user: root
    healthcheck:
      test: ["CMD", "curl", "-k", "https://localhost:9999/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    security_opt:
      - no-new-privileges:true
    networks:
      - secretbay-net
    stop_grace_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
      certbot:
        condition: service_started
    command: sh -c "install -m 644 /certs/fullchain.pem /app/certs/server.crt && install -m 644 /certs/privkey.pem /app/certs/server.key && exec /app/vpn-setup-server"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: nginx.Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html:ro
      - ./certs:/etc/nginx/certs:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
      - type: tmpfs
        target: /var/run
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 256M
    environment:
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=2048
      - NGINX_KEEPALIVE_TIMEOUT=65
      - NGINX_HTTP2_MAX_FIELD_SIZE=16k
      - NGINX_HTTP2_MAX_HEADER_SIZE=32k
    depends_on:
      - vpn-server
      - certbot
    restart: unless-stopped
    networks:
      - secretbay-net
    stop_grace_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - secretbay-net
    stop_grace_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

  backup-cron:
    image: alpine:latest 
    volumes:
      - ./backups:/var/backups/vpn-server
      - ./scripts/backup-cron.sh:/tmp/backup.sh:ro
      - /tmp:/tmp
    command: sh -c "cp /tmp/backup.sh /tmp/backup-exec.sh && chmod +x /tmp/backup-exec.sh && crond -f"
    environment:
      - BACKUP_SCHEDULE=0 0 * * * /tmp/backup-exec.sh
    restart: unless-stopped
    networks:
      - secretbay-net
    stop_grace_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M

  postgres:
    image: postgres:16-alpine
    container_name: secretbay-db
    environment:
      - POSTGRES_DB=secretbay
      - POSTGRES_USER=secretbay
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
      # PostgreSQL performance tuning
      - POSTGRES_INITDB_ARGS=--data-checksums
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_HOST_AUTH_METHOD=md5
      # Memory settings
      - POSTGRES_SHARED_BUFFERS=128MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=256MB
      - POSTGRES_WORK_MEM=4MB
      - POSTGRES_MAINTENANCE_WORK_MEM=32MB
      - POSTGRES_MAX_CONNECTIONS=50
      - POSTGRES_MAX_WAL_SIZE=1GB
      - POSTGRES_MIN_WAL_SIZE=80MB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - secretbay-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U secretbay"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    # Add resource constraints to prevent OOM issues
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 256M
    # Optimization settings for stability
    stop_grace_period: 30s
    stop_signal: SIGINT
    shm_size: 128mb
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    sysctls:
      - kernel.shmmax=268435456
      - net.core.somaxconn=1024

volumes:
  postgres_data:
    driver: local

networks:
  secretbay-net:
    driver: bridge
    name: secretbay-net
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"