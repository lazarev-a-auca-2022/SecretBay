# ===================
# Basic Settings
# ===================
events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

# ===================
# HTTP Settings
# ===================
http {
    # Rate Limiting Maps
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Basic Settings
    include       mime.types;
    default_type  application/octet-stream;
    charset       utf-8;

    # Security Settings
    server_tokens off;
    client_max_body_size 1m;
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;
    
    # SSL Settings
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_buffer_size 4k;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;
    
    # DH Parameters
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    
    # Security Headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:;" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=()" always;

    # Proxy Settings
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_buffers 8 32k;
    proxy_buffer_size 64k;
    
    # HTTP/2 and connection settings
    http2 on;
    large_client_header_buffers 4 64k;
    keepalive_timeout 180s;

    # Define upstream for vpn-server with better connection handling
    upstream vpn_backend {
        server vpn-server:9999;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # HTTP Server (redirect to HTTPS)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS Server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name secretbay.me;

        # SSL Configuration
        ssl_certificate /etc/letsencrypt/live/secretbay.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/secretbay.me/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/secretbay.me/chain.pem;

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        error_page 429 /rate-limit.html;

        # Root directory and index
        root   /usr/share/nginx/html;
        index  index.html;

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Static file handling with cache control
        location ~ \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            expires 30d;
            add_header Cache-Control "public, no-transform";
            access_log off;
            gzip_static on;
        }

        # CSRF token endpoint with optimized settings
        location = /api/csrf-token {
            proxy_pass https://vpn_backend;  # Changed to HTTPS to match other endpoints
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Increased timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Updated buffering settings
            proxy_buffering on;
            proxy_buffer_size 64k;
            proxy_buffers 4 64k;
            proxy_busy_buffers_size 64k;

            # Error handling
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Content-Type,X-CSRF-Token' always;
            add_header 'Access-Control-Max-Age' '3600' always;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Accept,Content-Type,X-CSRF-Token' always;
                add_header 'Access-Control-Max-Age' '3600' always;
                return 204;
            }
        }

        # Login endpoint with stricter rate limiting
        location /api/auth/login {
            limit_req zone=login_limit burst=5 nodelay;
            limit_conn addr 5;

            proxy_pass http://vpn_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, X-CSRF-Token' always;

            # Handle preflight
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, X-CSRF-Token' always;
                add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }
        }

        # Auth status endpoint with no caching
        location = /api/auth/status {
            proxy_pass https://vpn_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Accept "application/json";

            # Disable all caching
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;

            # Ensure response is treated as JSON
            add_header Content-Type "application/json" always;

            # Increased timeouts for reliability
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Content-Type' always;
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Content-Type' always;
                add_header 'Access-Control-Max-Age' '3600' always;
                return 204;
            }
        }

        # API Proxy with rate limiting
        location /api/ {
            limit_req zone=api_limit burst=10 nodelay;
            limit_conn addr 10;

            proxy_pass https://vpn_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;

            # Security
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;

            # Error handling
            proxy_intercept_errors on;
            error_page 502 504 /error/backend-down.html;

            # CORS headers for OPTIONS
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-CSRF-Token' always;
                add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }

            # Add CORS headers for actual requests
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://vpn_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Tighter timeouts for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Monitoring endpoint (internal only)
        location /metrics {
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker network
            deny all;

            proxy_pass http://vpn_backend/metrics;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Default location block
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";

            # Basic rate limiting for other requests
            limit_req zone=api_limit burst=50 nodelay;
            limit_conn addr 20;

            # Force HTTPS
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        }
    }
}
